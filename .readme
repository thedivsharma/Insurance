# 🧠 Insurance LLM App

A hybrid AI-powered Django application for automated insurance document parsing using local Ollama models and OpenAI API with structured output pipelines.

### ⚙️ Stack Overview
- 🧩 **Django 4.2**: Backend orchestration, file handling, and UI templating.
- 🧠 **LLM Integration**: Uses **Ollama** (e.g. `mistral`, `llama3`) and **OpenAI GPT-4 API** for contextual entity extraction.
- 📤 **Structured Output**: LLMs prompt-engineered for JSON-format response (e.g., patient name, hospital, dates, diagnosis, amount).
- 🔄 **Pipeline**: Upload → Store (UUID) → Extract (LLM) → Serialize → Store in MySQL → Render UI.
- 💾 **MySQL 8.x**: Persistent storage of normalized insurance claim fields.
- 🔐 **Modular Inference**: `insurance_claim` module hot-loaded via `sys.path` patch; keeps external logic decoupled.
- 🧾 **LLM Abstraction Layer**: Unified extraction interface across OpenAI and Ollama backends.
- 📁 **Media Strategy**: Image files streamed into `/images`, JSON to `/extracted_data`, and then deleted post-processing.
- 🛠️ **Connector**: Uses `mysql-connector-python` for robust DB interactions.

### 💡 Highlights
- Seamless Django ↔️ LLM ↔️ RDBMS integration
- Prompt-tuned for high-confidence structured responses
- Locally runnable + API-flexible (cloud/offline inference)
- SSH-authenticated Git-ready modular repo layout

---

**Author:** [Divyansh Sharma](https://github.com/thedivsharma)
